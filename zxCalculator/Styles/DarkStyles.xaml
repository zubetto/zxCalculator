<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:ColorTools="clr-namespace:ColorTools;assembly=ColorTools"
                    mc:Ignorable="d">

    <!-- *** CONTROLS *** -->
    <!-- *** BRUSHES *** -->
    <SolidColorBrush x:Key="SolidColor_ActiveCyan" Color="#FFBEE6FD"/>
    <SolidColorBrush x:Key="SolidColor_ForeGrey" Color="#FFB6B6B6"/>
    <SolidColorBrush x:Key="SolidColor_Border" Color="#FF4E4E4E"/>
    <SolidColorBrush x:Key="SolidColor_Background" Color="#FF3C3C3C"/>
    <SolidColorBrush x:Key="SolidColor_TextBoxBack" Color="#FF202020"/>
    <SolidColorBrush x:Key="SolidColor_ForeBlue" Color="#FF098FED"/>

    <SolidColorBrush x:Key="DisabledBackgroundBrush" Color="#FF343434"/>
    <SolidColorBrush x:Key="DisabledForegroundBrush" Color="#FF424242"/>

    <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
    <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
    <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
    <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
    <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
    <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
    <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
    <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
    <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>

    <SolidColorBrush x:Key="ScrollBar.Static.Background" Color="#00F0F0F0"/>
    <SolidColorBrush x:Key="ScrollBar.Static.Border" Color="#00F0F0F0"/>
    <SolidColorBrush x:Key="ScrollBar.Pressed.Glyph" Color="#FFFFFF"/>
    <SolidColorBrush x:Key="ScrollBar.MouseOver.Glyph" Color="#000000"/>
    <SolidColorBrush x:Key="ScrollBar.Disabled.Glyph" Color="#BFBFBF"/>
    <SolidColorBrush x:Key="ScrollBar.Static.Glyph" Color="#00606060"/>
    <SolidColorBrush x:Key="ScrollBar.MouseOver.Background" Color="#DADADA"/>
    <SolidColorBrush x:Key="ScrollBar.MouseOver.Border" Color="#DADADA"/>
    <SolidColorBrush x:Key="ScrollBar.Pressed.Background" Color="#606060"/>
    <SolidColorBrush x:Key="ScrollBar.Pressed.Border" Color="#606060"/>
    <SolidColorBrush x:Key="ScrollBar.Disabled.Background" Color="#F0F0F0"/>
    <SolidColorBrush x:Key="ScrollBar.Disabled.Border" Color="#F0F0F0"/>
    <SolidColorBrush x:Key="ScrollBar.MouseOver.Thumb" Color="#A6A6A6"/>
    <SolidColorBrush x:Key="ScrollBar.Pressed.Thumb" Color="#606060"/>
    <SolidColorBrush x:Key="ScrollBar.Static.Thumb" Color="#FF3C3C3C"/>

    <SolidColorBrush x:Key="OptionMark.Static.Background" Color="#FFFFFFFF"/>
    <SolidColorBrush x:Key="OptionMark.Static.Border" Color="#FF707070"/>
    <SolidColorBrush x:Key="OptionMark.MouseOver.Background" Color="#FFF3F9FF"/>
    <SolidColorBrush x:Key="OptionMark.MouseOver.Border" Color="#FF5593FF"/>
    <SolidColorBrush x:Key="OptionMark.MouseOver.Glyph" Color="#FF212121"/>
    <SolidColorBrush x:Key="OptionMark.Disabled.Background" Color="#FFE6E6E6"/>
    <SolidColorBrush x:Key="OptionMark.Disabled.Border" Color="#FFBCBCBC"/>
    <SolidColorBrush x:Key="OptionMark.Disabled.Glyph" Color="#FF707070"/>
    <SolidColorBrush x:Key="OptionMark.Pressed.Background" Color="#FFD9ECFF"/>
    <SolidColorBrush x:Key="OptionMark.Pressed.Border" Color="#FF3C77DD"/>
    <SolidColorBrush x:Key="OptionMark.Pressed.Glyph" Color="#FF212121"/>
    <SolidColorBrush x:Key="OptionMark.Static.Glyph" Color="#FF5495D4"/>

    <SolidColorBrush x:Key="ComboBox.Static.Background" Color="#FF3C3C3C"/>
    <SolidColorBrush x:Key="ComboBox.Static.Border" Color="#FFACACAC"/>
    <SolidColorBrush x:Key="ComboBox.Static.Editable.Background" Color="#FFFFFFFF"/>
    <SolidColorBrush x:Key="ComboBox.Static.Editable.Border" Color="#FFABADB3"/>
    <SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Background" Color="Transparent"/>
    <SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Border" Color="Transparent"/>
    <SolidColorBrush x:Key="ComboBox.MouseOver.Glyph" Color="#FF000000"/>
    <LinearGradientBrush x:Key="ComboBox.MouseOver.Background" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#FFECF4FC" Offset="0.0"/>
        <GradientStop Color="#FFDCECFC" Offset="1.0"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ComboBox.MouseOver.Border" Color="#FF7EB4EA"/>
    <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Background" Color="#FFFFFFFF"/>
    <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Border" Color="#FF7EB4EA"/>
    <LinearGradientBrush x:Key="ComboBox.MouseOver.Editable.Button.Background" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#FFEBF4FC" Offset="0.0"/>
        <GradientStop Color="#FFDCECFC" Offset="1.0"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Button.Border" Color="#FF7EB4EA"/>
    <SolidColorBrush x:Key="ComboBox.Pressed.Glyph" Color="#FF000000"/>
    <LinearGradientBrush x:Key="ComboBox.Pressed.Background" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#FFDAECFC" Offset="0.0"/>
        <GradientStop Color="#FFC4E0FC" Offset="1.0"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ComboBox.Pressed.Border" Color="#FF569DE5"/>
    <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Background" Color="#FFFFFFFF"/>
    <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Border" Color="#FF569DE5"/>
    <LinearGradientBrush x:Key="ComboBox.Pressed.Editable.Button.Background" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#FFDAEBFC" Offset="0.0"/>
        <GradientStop Color="#FFC4E0FC" Offset="1.0"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Button.Border" Color="#FF569DE5"/>
    <SolidColorBrush x:Key="ComboBox.Disabled.Glyph" Color="#FFBFBFBF"/>
    <SolidColorBrush x:Key="ComboBox.Disabled.Background" Color="#FFF0F0F0"/>
    <SolidColorBrush x:Key="ComboBox.Disabled.Border" Color="#FFD9D9D9"/>
    <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Background" Color="#FFFFFFFF"/>
    <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Border" Color="#FFBFBFBF"/>
    <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Background" Color="Transparent"/>
    <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Border" Color="Transparent"/>
    <SolidColorBrush x:Key="ComboBox.Static.Glyph" Color="#FF606060"/>

    <BorderGapMaskConverter x:Key="BorderGapMaskConverter"/>

    <!-- Checker background -->
    <DrawingBrush x:Key="CheckerBackground" Stretch="Fill" TileMode="Tile" Viewport="12,12,20,20" ViewportUnits="Absolute">

        <!-- a drawing of 4 checkerboard tiles -->
        <DrawingBrush.Drawing>
            <DrawingGroup>

                <!-- checkerboard background -->
                <GeometryDrawing Brush="White">
                    <GeometryDrawing.Geometry>
                        <RectangleGeometry Rect="0,0,20,20" />
                    </GeometryDrawing.Geometry>
                </GeometryDrawing>

                <!-- two checkerboard foreground tiles -->
                <GeometryDrawing Brush="LightGray">
                    <GeometryDrawing.Geometry>
                        <GeometryGroup>
                            <RectangleGeometry Rect="0,0,10,10" />
                            <RectangleGeometry Rect="10,10,10,10" />
                        </GeometryGroup>
                    </GeometryDrawing.Geometry>
                </GeometryDrawing>

            </DrawingGroup>
        </DrawingBrush.Drawing>
    </DrawingBrush>

    <!-- GroupBox -->
    <Style TargetType="{x:Type GroupBox}">
        <Setter Property="BorderBrush" Value="#D5DFE5"/>
        <Setter Property="BorderThickness" Value="0.5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GroupBox}">
                    <Grid SnapsToDevicePixels="true">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="6"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="6"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="6"/>
                        </Grid.RowDefinitions>
                        <Border BorderBrush="#FF717171" BorderThickness="{TemplateBinding BorderThickness}" Grid.ColumnSpan="4" CornerRadius="0" Grid.Row="1" Grid.RowSpan="3">
                            <Border.OpacityMask>
                                <MultiBinding ConverterParameter="7" Converter="{StaticResource BorderGapMaskConverter}">
                                    <Binding ElementName="Header" Path="ActualWidth"/>
                                    <Binding Path="ActualWidth" RelativeSource="{RelativeSource Self}"/>
                                    <Binding Path="ActualHeight" RelativeSource="{RelativeSource Self}"/>
                                </MultiBinding>
                            </Border.OpacityMask>
                        </Border>
                        <Border x:Name="Header" Grid.Column="1" Padding="3,1,3,0" Grid.Row="0" Grid.RowSpan="2">
                            <ContentPresenter ContentSource="Header" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                        <ContentPresenter Grid.ColumnSpan="2" Grid.Column="1" Margin="{TemplateBinding Padding}" Grid.Row="2" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--GROUP_BOX STYLE-->
    <Style x:Key="FlatGroupBox" TargetType="{x:Type GroupBox}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GroupBox}">
                    <Grid SnapsToDevicePixels="True">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="33*"/>
                        </Grid.RowDefinitions>
                        <Rectangle x:Name="BorderRect" RadiusY="2" RadiusX="2" Grid.Row="0" Grid.RowSpan="2" Fill="Transparent"
                         Stroke="{TemplateBinding BorderBrush}"
                         StrokeThickness="{TemplateBinding BorderThickness}"/>
                        <Rectangle x:Name="HeaderRect" Grid.Row="0" Fill="{TemplateBinding BorderBrush}" RadiusY="{Binding RadiusY, ElementName=BorderRect}" RadiusX="{Binding RadiusX, ElementName=BorderRect}"/>
                        <UniformGrid Rows="2" Columns="1">
                            <Rectangle x:Name="emptyRect"/>
                            <Rectangle x:Name="innerRect" Margin="0,0,0,-2"
                           Fill="{TemplateBinding BorderBrush}"/>
                        </UniformGrid>
                        <ContentPresenter ContentSource="Header" HorizontalAlignment="Left" Grid.Row="0" Margin="5,0,0,0"/>
                        <ContentPresenter Grid.Row="1"
                                Margin="{TemplateBinding Padding}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!--BUTTON TEMPLATE-->
    <ControlTemplate x:Key="ButtonControlTemplate1" TargetType="{x:Type Button}">
        <Border x:Name="border" BorderBrush="{StaticResource SolidColor_Border}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True" Background="#FF3C3C3C">
            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsFocused" Value="True">
                <!--Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="#FFBEE6FD"/-->
                <!--Setter Property="Background" TargetName="border" Value="#FFBEE6FD"/-->
                <Setter Property="BorderBrush" TargetName="border" Value="#FFBEE6FD"/>
            </Trigger>
            <Trigger Property="IsDefaulted" Value="True">
                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <!--Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="#FFBEE6FD"/-->
                <!--Setter Property="Background" TargetName="border" Value="#FFBEE6FD"/-->
                <Setter Property="BorderBrush" TargetName="border" Value="#FFBEE6FD"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="White"/>
                <Setter Property="Background" TargetName="border" Value="#FFC4E5F6"/>
                <Setter Property="BorderBrush" TargetName="border" Value="#FF2C628B"/>
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="True">
                <Setter Property="Background" TargetName="border" Value="#FFBCDDEE"/>
                <Setter Property="BorderBrush" TargetName="border" Value="#FF245A83"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" TargetName="border" Value="{StaticResource DisabledBackgroundBrush}"/>
                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource DisabledBackgroundBrush}"/>
                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource DisabledForegroundBrush}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--BUTTON STYLE-->
    <Style TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="#FFB6B6B6" />
        <Setter Property="BorderBrush" Value="#FF707070"/>
        <Setter Property="Template" Value="{StaticResource ButtonControlTemplate1}"/>
    </Style>

    <!--BUTTON ACTIVE STYLE-->
    <Style x:Key="ButtonActive" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="{StaticResource SolidColor_ActiveCyan}"/>
        <!--Setter Property="BorderBrush" Value="{StaticResource SolidColor_ActiveCyan}"/-->
        <Setter Property="Template" Value="{StaticResource ButtonControlTemplate1}"/>
    </Style>

    <!--Graph Stroke BUTTON TEMPLATE-->
    <ControlTemplate x:Key="GSButtonTemplate" TargetType="{x:Type Button}">
        <Border x:Name="border" Background="{x:Null}" BorderBrush="{x:Null}" BorderThickness="0" SnapsToDevicePixels="True">
            <Canvas>
                <Ellipse x:Name="bttEllipse" Height="25" StrokeStartLineCap="Flat" StrokeEndLineCap="Flat" StrokeThickness="{TemplateBinding BorderThickness}" StrokeMiterLimit="4" StrokeLineJoin="Miter" Width="25" Margin="0"
                         Fill="{TemplateBinding Background}" Stroke="{TemplateBinding BorderBrush}"/>
                <Path x:Name="Sinwave" StrokeThickness="2" Stroke="{TemplateBinding Foreground}" StrokeMiterLimit="4" StrokeLineJoin="Miter" StrokeStartLineCap="Flat" StrokeEndLineCap="Flat" Height="23" Stretch="Fill" Width="23" Canvas.Left="1" Canvas.Top="1">
                    <Path.Data>
                        <PathGeometry Figures="m 0.62500004 1036.7372 0.62500006 0 c 1.8750001 0 2.3941036 5.8389 3.9484083 5.8389 1.5543046 0 2.0853185 -5.8389 2.0853185 -5.8389 0 0 0.8400823 -9.375 2.0912737 -9.375 1.2511914 0 2.0793624 9.375 2.0793624 9.375 0 0 1.25119 14.5972 2.085319 14.5972 0.834128 0 2.085318 -14.5972 2.085318 -14.5972 0 0 1.25119 -14.5972 2.085319 -14.5972 0.834128 0 2.085318 14.5972 2.085318 14.5972 0 0 0.828173 9.375 2.079364 9.375 1.251192 0 2.091273 -9.375 2.091273 -9.375 0 0 0.531015 -5.8389 2.085319 -5.8389 1.554305 0 2.073409 5.8389 3.948409 5.8389 l 0.625 0" FillRule="evenodd"/>
                    </Path.Data>
                </Path>
            </Canvas>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="Stroke" TargetName="bttEllipse" Value="#FFBEE6FD"/>
            </Trigger>
            <Trigger Property="IsDefaulted" Value="True">
                <Setter Property="BorderBrush" TargetName="border" Value="{x:Null}"/>
                <Setter Property="Fill" TargetName="bttEllipse" Value="#FF7F7F7F"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Fill" TargetName="bttEllipse" Value="{StaticResource SolidColor_TextBoxBack}"/>
                <Setter Property="Stroke" TargetName="bttEllipse" Value="{StaticResource SolidColor_Border}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Fill" TargetName="bttEllipse" Value="#FFC4E5F6"/>
                <Setter Property="Stroke" TargetName="bttEllipse" Value="#FF2C628B"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Fill" TargetName="bttEllipse" Value="{x:Null}"/>
                <Setter Property="Stroke" TargetName="bttEllipse" Value="{x:Null}"/>
                <Setter Property="Stroke" TargetName="Sinwave" Value="{StaticResource DisabledForegroundBrush}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--Graph Stroke BUTTON STYLE-->
    <Style x:Key="GSButtonStyle" TargetType="Button">
        <Setter Property="Foreground" Value="#FF7F7F7F"/>
        <Setter Property="Background" Value="#00000000"/>
        <Setter Property="BorderBrush" Value="{x:Null}"/>
        <Setter Property="Template" Value="{StaticResource GSButtonTemplate}"/>
    </Style>
    
    <!--BUTTON_NumSpinner TEMPLATE-->
    <ControlTemplate x:Key="ButtonNumSpinner" TargetType="{x:Type RepeatButton}">
        <Border x:Name="border" BorderBrush="{x:Null}" Background="{x:Null}" BorderThickness="0" SnapsToDevicePixels="True">
            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="#FFBEE6FD"/>
                <!--Setter Property="Background" TargetName="border" Value="#FFBEE6FD"/-->
                <Setter Property="BorderBrush" TargetName="border" Value="#FF3C7FB1"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="#FFBEE6FD"/>
                <!--Setter Property="Background" TargetName="border" Value="#FFBEE6FD"/-->
                <Setter Property="BorderBrush" TargetName="border" Value="#FF3C7FB1"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="#FF44ADEA"/>
                <!--Setter Property="Background" TargetName="border" Value="#FFC4E5F6"/-->
                <Setter Property="BorderBrush" TargetName="border" Value="#FF2C628B"/>
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="True">
                <Setter Property="Background" TargetName="border" Value="#FFBCDDEE"/>
                <Setter Property="BorderBrush" TargetName="border" Value="#FF245A83"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">

                <Setter Property="BorderBrush" TargetName="border" Value="#FFADB2B5"/>
                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="#FF838383"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--BUTTON_NumSpinner STYLE-->
    <Style TargetType="{x:Type RepeatButton}" x:Key="ButtonNumSpinnerStyle">
        <Setter Property="Foreground" Value="#FFB6B6B6" />
        <Setter Property="Template" Value="{StaticResource ButtonNumSpinner}"/>
    </Style>

    <!--TEXTBOX STYLE Dial-->
    <Style x:Key="TextBoxStyle_DigiOut" TargetType="{x:Type TextBox}">
        <Setter Property="Foreground" Value="{StaticResource SolidColor_ForeGrey}"/>
        <Setter Property="Background" Value="{StaticResource SolidColor_TextBoxBack}"/>
        <Setter Property="BorderBrush" Value="{x:Null}"/>
        <Setter Property="FontFamily" Value="Cambria Math"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="IsReadOnly" Value="True"/>
        <Setter Property="HorizontalContentAlignment" Value="Right"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="TextWrapping" Value="NoWrap"/>
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="AllowDrop" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Grid>
                        <Border x:Name="Border" SnapsToDevicePixels="True" BorderThickness="1" Padding="0" BorderBrush="{TemplateBinding BorderBrush}">

                            <!-- The implementation places the Content into the ScrollViewer. It must be named PART_ContentHost for the control to function -->
                            <ScrollViewer Margin="0" x:Name="PART_ContentHost" Background="{TemplateBinding Background}"/>

                        </Border>
                        <Rectangle x:Name="progressBar" Margin="1"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{DynamicResource DisabledBackgroundBrush}" TargetName="Border"/>
                            <Setter Property="BorderBrush" Value="{DynamicResource DisabledBackgroundBrush}" TargetName="Border"/>
                            <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="IsEnabled" Value="True"/>
    </Style>

    <!--TEXTBOX STYLE Active Dial-->
    <Style x:Key="ActiveDial" TargetType="{x:Type TextBox}" BasedOn="{StaticResource TextBoxStyle_DigiOut}">
        <Setter Property="Foreground" Value="#FFE0E0A2"/>
        <Setter Property="BorderBrush" Value="{StaticResource SolidColor_ActiveCyan}"/>
    </Style>

    <!--TEXTBOX STYLE Args input-->
    <Style x:Key="TextBoxStyle_ArgInput" TargetType="{x:Type TextBox}">
        <Setter Property="Foreground" Value="{StaticResource SolidColor_ForeGrey}"/>
        <Setter Property="Background" Value="{StaticResource SolidColor_TextBoxBack}"/>
        <Setter Property="BorderBrush" Value="{x:Null}"/>
        <Setter Property="FontFamily" Value="Cambria Math"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="IsReadOnly" Value="False"/>
        <Setter Property="HorizontalContentAlignment" Value="Right"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="TextWrapping" Value="NoWrap"/>
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="AllowDrop" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Grid>
                        <Border x:Name="Border" SnapsToDevicePixels="True" BorderThickness="1" Padding="0" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}">
                            <DockPanel LastChildFill="True">
                                <DockPanel DockPanel.Dock="Right" Width="12">
                                    <RepeatButton x:Name="rebttIncrease" Content="5" DockPanel.Dock="Top" Height="12" FontFamily="Marlett" FontSize="10" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Padding="0,2,0,0" VerticalAlignment="Top"
                                            Style="{StaticResource ButtonNumSpinnerStyle}"/>
                                    <RepeatButton x:Name="rebttDecrease" Content="6" DockPanel.Dock="Bottom" Height="12" FontFamily="Marlett" FontSize="10" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Padding="0,0,0,2" VerticalAlignment="Top"
                                            Style="{StaticResource ButtonNumSpinnerStyle}"/>

                                </DockPanel>

                                <!-- The implementation places the Content into the ScrollViewer. It must be named PART_ContentHost for the control to function -->
                                <ScrollViewer Margin="0" x:Name="PART_ContentHost" Background="{TemplateBinding Background}"/>
                            </DockPanel>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{StaticResource DisabledBackgroundBrush}" TargetName="Border"/>
                            <Setter Property="BorderBrush" Value="{x:Null}" TargetName="Border"/>
                            <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--ARGS DOCKPANEL-->
    <DataTemplate x:Key="ArgumentsPanel">
        <DockPanel x:Name="dockArguments" Height="25" LastChildFill="True" Margin="0,2,0,0">
            <Label x:Name="labelboxArgLabel"
                            Background="#FF323232" Foreground="#FFB4B4B4" BorderBrush="{x:Null}" FontFamily="Cambria Math" BorderThickness="1"
                            DockPanel.Dock="Left" Width="50" HorizontalContentAlignment="Center" Content="x, s" VerticalContentAlignment="Bottom" Padding="1,1,1,5" FontSize="12"/>
            <ToggleButton x:Name="addRange" Content="Range" Margin="2,0,0,0"
                            DockPanel.Dock="Right" FontFamily="Cambria Math" Padding="3,1" Width="54" FontSize="12"/>
            <TextBox x:Name="txtboxInput" 
                            TextWrapping="NoWrap" Text="25.125402" 
                            Background="#FF202020" Foreground="#FFB4B4B4" BorderBrush="{x:Null}" VerticalContentAlignment="Bottom" HorizontalContentAlignment="Right" FontFamily="Cambria Math" FontSize="16" Style="{DynamicResource TextBoxStyle_ArgInput}" BorderThickness="1" IsUndoEnabled="False"/>
        </DockPanel>
    </DataTemplate>

    <!-- FocusVisual -->
    <Style x:Key="FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Toggle Button -->
    <Style TargetType="{x:Type ToggleButton}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter Property="Background" Value="{StaticResource SolidColor_Background}"/>
        <Setter Property="BorderBrush" Value="{StaticResource SolidColor_Border}"/>
        <Setter Property="Foreground" Value="{StaticResource SolidColor_ForeGrey}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Button.IsDefaulted" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource SolidColor_ForeBlue}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource SolidColor_ForeBlue}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource DisabledBackgroundBrush}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource DisabledBackgroundBrush}"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource DisabledForegroundBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ScrollBarButton -->
    <Style x:Key="ScrollBarButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border x:Name="border" BorderBrush="{StaticResource ScrollBar.Static.Border}" BorderThickness="1" Background="{StaticResource ScrollBar.Static.Background}" SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource ScrollBar.MouseOver.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource ScrollBar.MouseOver.Border}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource ScrollBar.Pressed.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource ScrollBar.Pressed.Border}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                            <Setter Property="Background" TargetName="border" Value="{StaticResource ScrollBar.Disabled.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource ScrollBar.Disabled.Border}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- RepeatButtonTransparent -->
    <Style x:Key="RepeatButtonTransparent" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ScrollBarThumbVertical -->
    <Style x:Key="ScrollBarThumbVertical" TargetType="{x:Type Thumb}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Rectangle x:Name="rectangle" Fill="{StaticResource ScrollBar.Static.Thumb}" Height="{TemplateBinding Height}" SnapsToDevicePixels="True" Width="{TemplateBinding Width}"/>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Fill" TargetName="rectangle" Value="{StaticResource ScrollBar.MouseOver.Thumb}"/>
                        </Trigger>
                        <Trigger Property="IsDragging" Value="true">
                            <Setter Property="Fill" TargetName="rectangle" Value="{StaticResource ScrollBar.Pressed.Thumb}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ScrollBarThumbHorizontal -->
    <Style x:Key="ScrollBarThumbHorizontal" TargetType="{x:Type Thumb}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Rectangle x:Name="rectangle" Fill="{StaticResource ScrollBar.Static.Thumb}" Height="{TemplateBinding Height}" SnapsToDevicePixels="True" Width="{TemplateBinding Width}"/>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Fill" TargetName="rectangle" Value="{StaticResource ScrollBar.MouseOver.Thumb}"/>
                        </Trigger>
                        <Trigger Property="IsDragging" Value="true">
                            <Setter Property="Fill" TargetName="rectangle" Value="{StaticResource ScrollBar.Pressed.Thumb}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ScrollBar Style -->
    <Style TargetType="{x:Type ScrollBar}">
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
        <Setter Property="Background" Value="{StaticResource ScrollBar.Static.Background}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ScrollBar.Static.Border}"/>
        <Setter Property="Foreground" Value="{StaticResource SolidColor_Border}"/>
        <Setter Property="BorderThickness" Value="1,0"/>
        <Setter Property="Width" Value="11"/>
        <Setter Property="MinWidth" Value="11"/>
        <Setter Property="Margin" Value="5,0,0,0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid x:Name="Bg" SnapsToDevicePixels="true">
                        <Grid.RowDefinitions>
                            <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
                            <RowDefinition Height="0.00001*"/>
                            <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
                        </Grid.RowDefinitions>

                        <RepeatButton x:Name="PART_LineUpButton" Command="{x:Static ScrollBar.LineUpCommand}" IsEnabled="{TemplateBinding IsMouseOver}" Style="{StaticResource ButtonNumSpinnerStyle}"
                                      Content="5" FontFamily="Marlett" FontSize="10" 
                                      HorizontalContentAlignment="Center" 
                                      VerticalContentAlignment="Center" 
                                      Padding="0,2,0,0" VerticalAlignment="Top"/>
                        <Track x:Name="PART_Track" IsDirectionReversed="true" IsEnabled="{TemplateBinding IsMouseOver}" Grid.Row="1">
                            <Track.DecreaseRepeatButton>
                                <RepeatButton Command="{x:Static ScrollBar.PageUpCommand}" Style="{StaticResource RepeatButtonTransparent}"/>
                            </Track.DecreaseRepeatButton>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton Command="{x:Static ScrollBar.PageDownCommand}" Style="{StaticResource RepeatButtonTransparent}"/>
                            </Track.IncreaseRepeatButton>
                            <Track.Thumb>
                                <Thumb Style="{StaticResource ScrollBarThumbVertical}"/>
                            </Track.Thumb>
                        </Track>
                        <RepeatButton x:Name="PART_LineDownButton" Command="{x:Static ScrollBar.LineDownCommand}" IsEnabled="{TemplateBinding IsMouseOver}" Grid.Row="2" Style="{StaticResource ButtonNumSpinnerStyle}"
                                      Content="6" FontFamily="Marlett" FontSize="10" 
                                      HorizontalContentAlignment="Center" 
                                      VerticalContentAlignment="Center" 
                                      Padding="0,2,0,0" VerticalAlignment="Center"/>
                    </Grid>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Width" Value="Auto"/>
                <Setter Property="MinWidth" Value="0"/>
                <Setter Property="Height" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
                <Setter Property="MinHeight" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
                <Setter Property="BorderThickness" Value="0,1"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollBar}">
                            <Grid x:Name="Bg" SnapsToDevicePixels="true">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
                                    <ColumnDefinition Width="0.00001*"/>
                                    <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
                                </Grid.ColumnDefinitions>
                                <RepeatButton x:Name="PART_LineLeftButton" Command="{x:Static ScrollBar.LineLeftCommand}" IsEnabled="{TemplateBinding IsMouseOver}" Style="{StaticResource ButtonNumSpinnerStyle}"
                                      Content="3" FontFamily="Marlett" FontSize="10" 
                                      HorizontalContentAlignment="Center" 
                                      VerticalContentAlignment="Center"
                                      HorizontalAlignment="Left"/>
                                <Track x:Name="PART_Track" Grid.Column="1" IsEnabled="{TemplateBinding IsMouseOver}">
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton Command="{x:Static ScrollBar.PageLeftCommand}" Style="{StaticResource RepeatButtonTransparent}"/>
                                    </Track.DecreaseRepeatButton>
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton Command="{x:Static ScrollBar.PageRightCommand}" Style="{StaticResource RepeatButtonTransparent}"/>
                                    </Track.IncreaseRepeatButton>
                                    <Track.Thumb>
                                        <Thumb Style="{StaticResource ScrollBarThumbHorizontal}"/>
                                    </Track.Thumb>
                                </Track>
                                <RepeatButton x:Name="PART_LineRightButton" Grid.Column="2" Command="{x:Static ScrollBar.LineRightCommand}" IsEnabled="{TemplateBinding IsMouseOver}" Style="{StaticResource ButtonNumSpinnerStyle}"
                                      Content="4" FontFamily="Marlett" FontSize="10" 
                                      HorizontalContentAlignment="Center" 
                                      VerticalContentAlignment="Center"
                                      HorizontalAlignment="Right"/>
                            </Grid>
                            <!--ControlTemplate.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineRightButton}" Value="true"/>
                                        <Condition Binding="{Binding IsPressed, ElementName=PART_LineRightButton}" Value="true"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Fill" TargetName="ArrowRight" Value="{StaticResource ScrollBar.Pressed.Glyph}"/>
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineLeftButton}" Value="true"/>
                                        <Condition Binding="{Binding IsPressed, ElementName=PART_LineLeftButton}" Value="true"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Fill" TargetName="ArrowLeft" Value="{StaticResource ScrollBar.Pressed.Glyph}"/>
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineRightButton}" Value="true"/>
                                        <Condition Binding="{Binding IsPressed, ElementName=PART_LineRightButton}" Value="false"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Fill" TargetName="ArrowRight" Value="{StaticResource ScrollBar.MouseOver.Glyph}"/>
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineLeftButton}" Value="true"/>
                                        <Condition Binding="{Binding IsPressed, ElementName=PART_LineLeftButton}" Value="false"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Fill" TargetName="ArrowLeft" Value="{StaticResource ScrollBar.MouseOver.Glyph}"/>
                                </MultiDataTrigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Fill" TargetName="ArrowLeft" Value="{StaticResource ScrollBar.Disabled.Glyph}"/>
                                    <Setter Property="Fill" TargetName="ArrowRight" Value="{StaticResource ScrollBar.Disabled.Glyph}"/>
                                </Trigger>
                            </-->
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- OptionMarkFocusVisual -->
    <Style x:Key="OptionMarkFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="14,0,0,0" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- CheckBox Style -->
    <Style TargetType="{x:Type CheckBox}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter Property="Background" Value="{StaticResource OptionMark.Static.Background}"/>
        <Setter Property="BorderBrush" Value="{StaticResource OptionMark.Static.Border}"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Border x:Name="checkBoxBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="1" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <Grid x:Name="markGrid">
                                <Path x:Name="optionMark" Data="F1 M 9.97498,1.22334L 4.6983,9.09834L 4.52164,9.09834L 0,5.19331L 1.27664,3.52165L 4.255,6.08833L 8.33331,1.52588e-005L 9.97498,1.22334 Z " Fill="{StaticResource OptionMark.Static.Glyph}" Margin="1" Opacity="0" Stretch="None"/>
                                <Rectangle x:Name="indeterminateMark" Fill="{StaticResource OptionMark.Static.Glyph}" Margin="2" Opacity="0"/>
                            </Grid>
                        </Border>
                        <ContentPresenter x:Name="contentPresenter" Grid.Column="1" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasContent" Value="true">
                            <Setter Property="FocusVisualStyle" Value="{StaticResource OptionMarkFocusVisual}"/>
                            <Setter Property="Padding" Value="4,-1,0,0"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.MouseOver.Background}"/>
                            <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.MouseOver.Border}"/>
                            <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.MouseOver.Glyph}"/>
                            <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.MouseOver.Glyph}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource DisabledBackgroundBrush}"/>
                            <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{x:Null}"/>
                            <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.Disabled.Glyph}"/>
                            <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.Disabled.Glyph}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Pressed.Background}"/>
                            <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Pressed.Border}"/>
                            <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.Pressed.Glyph}"/>
                            <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.Pressed.Glyph}"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Opacity" TargetName="optionMark" Value="1"/>
                            <Setter Property="Opacity" TargetName="indeterminateMark" Value="0"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter Property="Opacity" TargetName="optionMark" Value="0"/>
                            <Setter Property="Opacity" TargetName="indeterminateMark" Value="1"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ComboBoxToggleButton2 -->
    <Style x:Key="ComboBoxToggleButton2" TargetType="{x:Type ToggleButton}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="ClickMode" Value="Press"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="templateRoot" SnapsToDevicePixels="true" Background="{StaticResource ComboBox.Static.Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{x:Null}">
                        <Border x:Name="splitBorder" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" SnapsToDevicePixels="true" Margin="0" HorizontalAlignment="Right" BorderThickness="1" BorderBrush="Transparent">
                            <Path x:Name="arrow" VerticalAlignment="Center" Margin="0" HorizontalAlignment="Center" Fill="{StaticResource SolidColor_ForeGrey}" Data="F1 M 0,0 L 2.667,2.66665 L 5.3334,0 L 5.3334,-1.78168 L 2.6667,0.88501 L0,-1.78168 L0,0 Z"/>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="false"/>
                                <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="false"/>
                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="true"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Static.Editable.Background}"/>
                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Static.Editable.Border}"/>
                            <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Static.Editable.Button.Background}"/>
                            <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Static.Editable.Button.Border}"/>
                        </MultiDataTrigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.MouseOver.Glyph}"/>
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Background}"/>
                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Border}"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Editable.Background}"/>
                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Editable.Border}"/>
                            <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.MouseOver.Editable.Button.Background}"/>
                            <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.MouseOver.Editable.Button.Border}"/>
                        </MultiDataTrigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.Pressed.Glyph}"/>
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Background}"/>
                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Border}"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Editable.Background}"/>
                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Editable.Border}"/>
                            <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Pressed.Editable.Button.Background}"/>
                            <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Pressed.Editable.Button.Border}"/>
                        </MultiDataTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.Disabled.Glyph}"/>
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource DisabledBackgroundBrush}"/>
                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="{x:Null}"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Editable.Background}"/>
                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Editable.Border}"/>
                            <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Disabled.Editable.Button.Background}"/>
                            <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Disabled.Editable.Button.Border}"/>
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ComboBoxTemplate -->
    <ControlTemplate x:Key="ComboBoxTemplate" TargetType="{x:Type ComboBox}">
        <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
            </Grid.ColumnDefinitions>
            <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom" Width="{TemplateBinding ActualWidth}">
                <Border x:Name="dropDownBorder" BorderBrush="{DynamicResource SolidColor_Border}" BorderThickness="1" Background="{DynamicResource SolidColor_TextBoxBack}" Width="{TemplateBinding ActualWidth}">
                    <ScrollViewer x:Name="DropDownScrollViewer">
                        <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                            <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                <Rectangle x:Name="opaqueRect" Fill="{Binding Background, ElementName=dropDownBorder}" Height="{Binding ActualHeight, ElementName=dropDownBorder}" Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                            </Canvas>
                            <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Grid>
                    </ScrollViewer>
                </Border>
            </Popup>
            <ToggleButton x:Name="toggleButton" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboBoxToggleButton2}"/>
            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="false" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="HasItems" Value="false">
                <Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsGrouping" Value="true"/>
                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
            </MultiTrigger>
            <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                <Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                <Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- ComboBoxEditableTextBox -->
    <Style x:Key="ComboBoxEditableTextBox" TargetType="{x:Type TextBox}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="AllowDrop" Value="true"/>
        <Setter Property="MinWidth" Value="0"/>
        <Setter Property="MinHeight" Value="0"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <ScrollViewer x:Name="PART_ContentHost" Background="Transparent" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ComboBoxEditableTemplate -->
    <ControlTemplate x:Key="ComboBoxEditableTemplate" TargetType="{x:Type ComboBox}">
        <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
            </Grid.ColumnDefinitions>
            <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
                <Border x:Name="dropDownBorder" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
                    <ScrollViewer x:Name="DropDownScrollViewer">
                        <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                            <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                <Rectangle x:Name="opaqueRect" Fill="{Binding Background, ElementName=dropDownBorder}" Height="{Binding ActualHeight, ElementName=dropDownBorder}" Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                            </Canvas>
                            <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Grid>
                    </ScrollViewer>
                </Border>
            </Popup>
            <ToggleButton x:Name="toggleButton" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboBoxToggleButton2}"/>
            <Border x:Name="border" Background="{StaticResource SolidColor_Background}" Margin="{TemplateBinding BorderThickness}">
                <TextBox x:Name="PART_EditableTextBox" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}" Margin="{TemplateBinding Padding}" Style="{StaticResource ComboBoxEditableTextBox}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Border>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Opacity" TargetName="border" Value="0.56"/>
            </Trigger>
            <Trigger Property="IsKeyboardFocusWithin" Value="true">
                <Setter Property="Foreground" Value="Black"/>
            </Trigger>
            <Trigger Property="HasItems" Value="false">
                <Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsGrouping" Value="true"/>
                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
            </MultiTrigger>
            <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                <Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                <Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- ComboBox Style -->
    <Style TargetType="{x:Type ComboBox}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter Property="Background" Value="{StaticResource ComboBox.Static.Background}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ComboBox.Static.Border}"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="Padding" Value="6,3,5,3"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="Template" Value="{StaticResource ComboBoxTemplate}"/>
        <Style.Triggers>
            <Trigger Property="IsEditable" Value="true">
                <Setter Property="IsTabStop" Value="false"/>
                <Setter Property="Padding" Value="2"/>
                <Setter Property="Template" Value="{StaticResource ComboBoxEditableTemplate}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <!-- Color Control Style -->
    <ControlTemplate x:Key="ColorEditor" TargetType="{x:Type ColorTools:ColorControlPanel}">
        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
            <Grid x:Name="RootGrid" DockPanel.Dock="Top" Height="160" MinWidth="400" MinHeight="160">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="{Binding Height, ElementName=RootGrid, Mode=OneWay}"/>
                    <ColumnDefinition Width="30"/>
                    <ColumnDefinition Width="323*"/>
                </Grid.ColumnDefinitions>
                <Canvas x:Name="SaturationGradient" ClipToBounds="True" Focusable="False" Margin="0">
                    <Canvas.Background>
                        <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
                            <GradientStop Color="White"/>
                            <GradientStop Color="Red" Offset="1"/>
                        </LinearGradientBrush>
                    </Canvas.Background>
                    <Rectangle x:Name="ValueGradient" Height="160" Canvas.Left="0" Canvas.Top="0" Width="160">
                        <Rectangle.Fill>
                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                <GradientStop Color="Black" Offset="1"/>
                                <GradientStop Color="#00000000"/>
                            </LinearGradientBrush>
                        </Rectangle.Fill>
                    </Rectangle>
                    <Ellipse x:Name="thumbSV" Fill="Black" Height="14" Canvas.Left="-7" Stroke="#FFB9B9B9" Canvas.Top="153" Width="14"/>
                </Canvas>
                <Rectangle x:Name="SVbounds" Margin="0" Stroke="Black"/>
                <Slider x:Name="sliderSpectrum" BorderBrush="Black" BorderThickness="1" Grid.Column="1" Foreground="Red" Focusable="False" HorizontalAlignment="Center" IsMoveToPointEnabled="True" LargeChange="10" Maximum="360" Margin="0" Orientation="Vertical" RenderTransformOrigin="0.5,0.5" SmallChange="0.01" Value="0" Width="25">
                    <Slider.Background>
                        <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
                            <GradientStop Color="Red"/>
                            <GradientStop Color="Red" Offset="1"/>
                            <GradientStop Color="#FEFFFF00" Offset="0.1667"/>
                            <GradientStop Color="#FE00FF00" Offset="0.3333"/>
                            <GradientStop Color="#FE00FFFF" Offset="0.5"/>
                            <GradientStop Color="#FE0000FF" Offset="0.6667"/>
                            <GradientStop Color="#FEFF00FF" Offset="0.8333"/>
                        </LinearGradientBrush>
                    </Slider.Background>
                    <Slider.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform ScaleY="-1" ScaleX="1"/>
                            <SkewTransform AngleY="0" AngleX="0"/>
                            <RotateTransform Angle="0"/>
                            <TranslateTransform/>
                        </TransformGroup>
                    </Slider.RenderTransform>
                    <Slider.Style>
                        <Style TargetType="{x:Type Slider}">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type Slider}">
                                        <Grid x:Name="GridRoot">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}"/>
                                                <RowDefinition Height="Auto"/>
                                            </Grid.RowDefinitions>
                                            <TickBar x:Name="TopTick" Grid.ColumnSpan="3" Fill="{x:Null}" Height="4" Margin="0,0,0,10" Placement="Top" Grid.RowSpan="2" SnapsToDevicePixels="True" Visibility="Collapsed"/>
                                            <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="3" CornerRadius="0" Height="25" Margin="0" Grid.Row="1"/>
                                            <Track x:Name="PART_Track" Grid.Row="1">
                                                <Track.DecreaseRepeatButton>
                                                    <RepeatButton Command="Slider.DecreaseLarge">
                                                        <RepeatButton.Style>
                                                            <Style TargetType="{x:Type RepeatButton}">
                                                                <Setter Property="Background" Value="Transparent"/>
                                                                <Setter Property="BorderBrush" Value="Transparent"/>
                                                                <Setter Property="IsTabStop" Value="False"/>
                                                                <Setter Property="Focusable" Value="False"/>
                                                                <Setter Property="Template">
                                                                    <Setter.Value>
                                                                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                            <Grid>
                                                                                <Rectangle Fill="{TemplateBinding Background}" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="{TemplateBinding BorderThickness}"/>
                                                                            </Grid>
                                                                        </ControlTemplate>
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </Style>
                                                        </RepeatButton.Style>
                                                    </RepeatButton>
                                                </Track.DecreaseRepeatButton>
                                                <Track.IncreaseRepeatButton>
                                                    <RepeatButton Command="Slider.IncreaseLarge">
                                                        <RepeatButton.Style>
                                                            <Style TargetType="{x:Type RepeatButton}">
                                                                <Setter Property="Background" Value="Transparent"/>
                                                                <Setter Property="BorderBrush" Value="Transparent"/>
                                                                <Setter Property="IsTabStop" Value="False"/>
                                                                <Setter Property="Focusable" Value="False"/>
                                                                <Setter Property="Template">
                                                                    <Setter.Value>
                                                                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                            <Grid>
                                                                                <Rectangle Fill="{TemplateBinding Background}" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="{TemplateBinding BorderThickness}"/>
                                                                            </Grid>
                                                                        </ControlTemplate>
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </Style>
                                                        </RepeatButton.Style>
                                                    </RepeatButton>
                                                </Track.IncreaseRepeatButton>
                                                <Track.Thumb>
                                                    <Thumb x:Name="TrackThumb" Foreground="{TemplateBinding Foreground}">
                                                        <Thumb.Style>
                                                            <Style TargetType="{x:Type Thumb}">
                                                                <Setter Property="SnapsToDevicePixels" Value="True"/>
                                                                <Setter Property="Template">
                                                                    <Setter.Value>
                                                                        <ControlTemplate TargetType="{x:Type Thumb}">
                                                                            <Grid>
                                                                                <Rectangle x:Name="Ellipse" Fill="{TemplateBinding Foreground}" Height="{TemplateBinding Width}" Stroke="Black" StrokeThickness="1" Width="10"/>
                                                                            </Grid>
                                                                            <ControlTemplate.Triggers>
                                                                                <Trigger Property="IsEnabled" Value="False">
                                                                                    <Setter Property="Fill" TargetName="Ellipse" Value="#FE4F4F4F"/>
                                                                                </Trigger>
                                                                            </ControlTemplate.Triggers>
                                                                        </ControlTemplate>
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </Style>
                                                        </Thumb.Style>
                                                    </Thumb>
                                                </Track.Thumb>
                                            </Track>
                                            <TickBar x:Name="BottomTick" Grid.ColumnSpan="3" Fill="{TemplateBinding Foreground}" Height="4" Margin="0,0,0,-4" Placement="Bottom" Grid.Row="2" SnapsToDevicePixels="True" Visibility="Collapsed"/>
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="TickPlacement" Value="TopLeft">
                                                <Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>
                                            </Trigger>
                                            <Trigger Property="TickPlacement" Value="BottomRight">
                                                <Setter Property="Visibility" TargetName="BottomTick" Value="Visible"/>
                                            </Trigger>
                                            <Trigger Property="TickPlacement" Value="Both">
                                                <Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>
                                                <Setter Property="Visibility" TargetName="BottomTick" Value="Visible"/>
                                            </Trigger>
                                            <Trigger Property="IsEnabled" Value="False">
                                                <Setter Property="Background" TargetName="Border" Value="#FF373737"/>
                                                <Setter Property="BorderBrush" TargetName="Border" Value="#FF373737"/>
                                            </Trigger>
                                            <Trigger Property="Orientation" Value="Vertical">
                                                <Setter Property="LayoutTransform" TargetName="GridRoot">
                                                    <Setter.Value>
                                                        <RotateTransform Angle="-90"/>
                                                    </Setter.Value>
                                                </Setter>
                                                <Setter Property="Orientation" TargetName="PART_Track" Value="Horizontal"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Slider.Style>
                </Slider>
                <DockPanel x:Name="RGBAdock" Grid.Column="2" Margin="5,0,0,0">
                    <DockPanel x:Name="dockRed" DockPanel.Dock="Top" Height="25" LastChildFill="True" Margin="0,0,0,5">
                        <Label x:Name="labelR" Content="R" DockPanel.Dock="Left" Foreground="{Binding Foreground, ElementName=txtRvalue}" FontSize="16" FontFamily="Cambria Math" HorizontalContentAlignment="Center" Padding="2" ScrollViewer.VerticalScrollBarVisibility="Disabled" VerticalContentAlignment="Center" Width="25"/>
                        <TextBox x:Name="txtRvalue" BorderBrush="{x:Null}" Background="{DynamicResource SolidColor_TextBoxBack}" DockPanel.Dock="Right" Foreground="{StaticResource SolidColor_ForeGrey}" FontSize="16" FontFamily="Cambria Math" HorizontalContentAlignment="Center" Height="25" Margin="0" Padding="0,1,0,0" TextWrapping="Wrap" Text="0" VerticalAlignment="Center" VerticalContentAlignment="Bottom" Width="38"/>
                        <Slider x:Name="sliderRed" BorderBrush="{x:Null}" Foreground="Black" Focusable="False" IsMoveToPointEnabled="True" LargeChange="15" Maximum="255" Margin="0,0,5,0" SmallChange="1" Value="0" VerticalAlignment="Center">
                            <Slider.Background>
                                <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
                                    <GradientStop Color="Black" Offset="0"/>
                                    <GradientStop Color="Red" Offset="1"/>
                                </LinearGradientBrush>
                            </Slider.Background>
                            <Slider.Style>
                                <Style TargetType="{x:Type Slider}">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type Slider}">
                                                <Grid x:Name="GridRoot">
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition Height="Auto"/>
                                                        <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}"/>
                                                        <RowDefinition Height="Auto"/>
                                                    </Grid.RowDefinitions>
                                                    <TickBar x:Name="TopTick" Grid.ColumnSpan="3" Fill="{DynamicResource GlyphBrush}" Height="4" Margin="0,0,0,10" Placement="Top" Grid.RowSpan="2" SnapsToDevicePixels="True" Visibility="Collapsed"/>
                                                    <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="3" CornerRadius="2" Height="4" Margin="0,5" Grid.Row="1"/>
                                                    <Track x:Name="PART_Track" Margin="-1,0" Grid.Row="1">
                                                        <Track.DecreaseRepeatButton>
                                                            <RepeatButton Command="Slider.DecreaseLarge">
                                                                <RepeatButton.Style>
                                                                    <Style TargetType="{x:Type RepeatButton}">
                                                                        <Setter Property="Background" Value="Transparent"/>
                                                                        <Setter Property="BorderBrush" Value="Transparent"/>
                                                                        <Setter Property="IsTabStop" Value="False"/>
                                                                        <Setter Property="Focusable" Value="False"/>
                                                                        <Setter Property="Template">
                                                                            <Setter.Value>
                                                                                <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                                    <Grid>
                                                                                        <Rectangle Fill="{TemplateBinding Background}" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="{TemplateBinding BorderThickness}"/>
                                                                                    </Grid>
                                                                                </ControlTemplate>
                                                                            </Setter.Value>
                                                                        </Setter>
                                                                    </Style>
                                                                </RepeatButton.Style>
                                                            </RepeatButton>
                                                        </Track.DecreaseRepeatButton>
                                                        <Track.IncreaseRepeatButton>
                                                            <RepeatButton Command="Slider.IncreaseLarge">
                                                                <RepeatButton.Style>
                                                                    <Style TargetType="{x:Type RepeatButton}">
                                                                        <Setter Property="Background" Value="Transparent"/>
                                                                        <Setter Property="BorderBrush" Value="Transparent"/>
                                                                        <Setter Property="IsTabStop" Value="False"/>
                                                                        <Setter Property="Focusable" Value="False"/>
                                                                        <Setter Property="Template">
                                                                            <Setter.Value>
                                                                                <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                                    <Grid>
                                                                                        <Rectangle Fill="{TemplateBinding Background}" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="{TemplateBinding BorderThickness}"/>
                                                                                    </Grid>
                                                                                </ControlTemplate>
                                                                            </Setter.Value>
                                                                        </Setter>
                                                                    </Style>
                                                                </RepeatButton.Style>
                                                            </RepeatButton>
                                                        </Track.IncreaseRepeatButton>
                                                        <Track.Thumb>
                                                            <Thumb x:Name="TrackThumb" Foreground="{TemplateBinding Foreground}" Style="{DynamicResource ColorSliderThumb}"/>
                                                        </Track.Thumb>
                                                    </Track>
                                                    <TickBar x:Name="BottomTick" Grid.ColumnSpan="3" Fill="{TemplateBinding Foreground}" Height="4" Margin="0,0,0,-4" Placement="Bottom" Grid.Row="2" SnapsToDevicePixels="True" Visibility="Collapsed"/>
                                                </Grid>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="TickPlacement" Value="TopLeft">
                                                        <Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>
                                                    </Trigger>
                                                    <Trigger Property="TickPlacement" Value="BottomRight">
                                                        <Setter Property="Visibility" TargetName="BottomTick" Value="Visible"/>
                                                    </Trigger>
                                                    <Trigger Property="TickPlacement" Value="Both">
                                                        <Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>
                                                        <Setter Property="Visibility" TargetName="BottomTick" Value="Visible"/>
                                                    </Trigger>
                                                    <Trigger Property="IsEnabled" Value="False">
                                                        <Setter Property="Background" TargetName="Border" Value="{DynamicResource DisabledBackgroundBrush}"/>
                                                        <Setter Property="BorderBrush" TargetName="Border" Value="{DynamicResource DisabledBorderBrush}"/>
                                                    </Trigger>
                                                    <Trigger Property="Orientation" Value="Vertical">
                                                        <Setter Property="LayoutTransform" TargetName="GridRoot">
                                                            <Setter.Value>
                                                                <RotateTransform Angle="-90"/>
                                                            </Setter.Value>
                                                        </Setter>
                                                        <Setter Property="Orientation" TargetName="PART_Track" Value="Horizontal"/>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </Slider.Style>
                        </Slider>
                    </DockPanel>
                    <DockPanel x:Name="dockGreen" DockPanel.Dock="Top" Height="25" LastChildFill="True" Margin="0,0,0,5">
                        <Label x:Name="labelG" Content="G" DockPanel.Dock="Left" Foreground="{Binding Foreground, ElementName=txtRvalue}" FontSize="16" FontFamily="Cambria Math" HorizontalContentAlignment="Center" Padding="2" ScrollViewer.VerticalScrollBarVisibility="Disabled" VerticalContentAlignment="Center" Width="25"/>
                        <TextBox x:Name="txtGvalue" BorderBrush="{x:Null}" Background="{Binding Background, ElementName=txtRvalue, Mode=TwoWay}" DockPanel.Dock="Right" Foreground="{Binding Foreground, ElementName=txtRvalue}" FontSize="16" FontFamily="Cambria Math" HorizontalContentAlignment="Center" Height="25" Margin="0" Padding="0,1,0,0" TextWrapping="Wrap" Text="0" VerticalAlignment="Center" VerticalContentAlignment="Bottom" Width="38"/>
                        <Slider x:Name="sliderGreen" BorderBrush="{x:Null}" Foreground="Black" Focusable="False" IsMoveToPointEnabled="True" LargeChange="15" Maximum="255" Margin="0,0,5,0" SmallChange="1" Value="0" VerticalAlignment="Center">
                            <Slider.Background>
                                <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
                                    <GradientStop Color="Black" Offset="0"/>
                                    <GradientStop Color="Lime" Offset="1"/>
                                </LinearGradientBrush>
                            </Slider.Background>
                            <Slider.Style>
                                <Style TargetType="{x:Type Slider}">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type Slider}">
                                                <Grid x:Name="GridRoot">
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition Height="Auto"/>
                                                        <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}"/>
                                                        <RowDefinition Height="Auto"/>
                                                    </Grid.RowDefinitions>
                                                    <TickBar x:Name="TopTick" Grid.ColumnSpan="3" Fill="{DynamicResource GlyphBrush}" Height="4" Margin="0,0,0,10" Placement="Top" Grid.RowSpan="2" SnapsToDevicePixels="True" Visibility="Collapsed"/>
                                                    <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="3" CornerRadius="2" Height="4" Margin="0,5" Grid.Row="1"/>
                                                    <Track x:Name="PART_Track" Margin="-1,0" Grid.Row="1">
                                                        <Track.DecreaseRepeatButton>
                                                            <RepeatButton Command="Slider.DecreaseLarge">
                                                                <RepeatButton.Style>
                                                                    <Style TargetType="{x:Type RepeatButton}">
                                                                        <Setter Property="Background" Value="Transparent"/>
                                                                        <Setter Property="BorderBrush" Value="Transparent"/>
                                                                        <Setter Property="IsTabStop" Value="False"/>
                                                                        <Setter Property="Focusable" Value="False"/>
                                                                        <Setter Property="Template">
                                                                            <Setter.Value>
                                                                                <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                                    <Grid>
                                                                                        <Rectangle Fill="{TemplateBinding Background}" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="{TemplateBinding BorderThickness}"/>
                                                                                    </Grid>
                                                                                </ControlTemplate>
                                                                            </Setter.Value>
                                                                        </Setter>
                                                                    </Style>
                                                                </RepeatButton.Style>
                                                            </RepeatButton>
                                                        </Track.DecreaseRepeatButton>
                                                        <Track.IncreaseRepeatButton>
                                                            <RepeatButton Command="Slider.IncreaseLarge">
                                                                <RepeatButton.Style>
                                                                    <Style TargetType="{x:Type RepeatButton}">
                                                                        <Setter Property="Background" Value="Transparent"/>
                                                                        <Setter Property="BorderBrush" Value="Transparent"/>
                                                                        <Setter Property="IsTabStop" Value="False"/>
                                                                        <Setter Property="Focusable" Value="False"/>
                                                                        <Setter Property="Template">
                                                                            <Setter.Value>
                                                                                <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                                    <Grid>
                                                                                        <Rectangle Fill="{TemplateBinding Background}" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="{TemplateBinding BorderThickness}"/>
                                                                                    </Grid>
                                                                                </ControlTemplate>
                                                                            </Setter.Value>
                                                                        </Setter>
                                                                    </Style>
                                                                </RepeatButton.Style>
                                                            </RepeatButton>
                                                        </Track.IncreaseRepeatButton>
                                                        <Track.Thumb>
                                                            <Thumb x:Name="TrackThumb" Foreground="{TemplateBinding Foreground}" Style="{DynamicResource ColorSliderThumb}"/>
                                                        </Track.Thumb>
                                                    </Track>
                                                    <TickBar x:Name="BottomTick" Grid.ColumnSpan="3" Fill="{TemplateBinding Foreground}" Height="4" Margin="0,0,0,-4" Placement="Bottom" Grid.Row="2" SnapsToDevicePixels="True" Visibility="Collapsed"/>
                                                </Grid>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="TickPlacement" Value="TopLeft">
                                                        <Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>
                                                    </Trigger>
                                                    <Trigger Property="TickPlacement" Value="BottomRight">
                                                        <Setter Property="Visibility" TargetName="BottomTick" Value="Visible"/>
                                                    </Trigger>
                                                    <Trigger Property="TickPlacement" Value="Both">
                                                        <Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>
                                                        <Setter Property="Visibility" TargetName="BottomTick" Value="Visible"/>
                                                    </Trigger>
                                                    <Trigger Property="IsEnabled" Value="False">
                                                        <Setter Property="Background" TargetName="Border" Value="{DynamicResource DisabledBackgroundBrush}"/>
                                                        <Setter Property="BorderBrush" TargetName="Border" Value="{DynamicResource DisabledBorderBrush}"/>
                                                    </Trigger>
                                                    <Trigger Property="Orientation" Value="Vertical">
                                                        <Setter Property="LayoutTransform" TargetName="GridRoot">
                                                            <Setter.Value>
                                                                <RotateTransform Angle="-90"/>
                                                            </Setter.Value>
                                                        </Setter>
                                                        <Setter Property="Orientation" TargetName="PART_Track" Value="Horizontal"/>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </Slider.Style>
                        </Slider>
                    </DockPanel>
                    <DockPanel x:Name="dockBlue" DockPanel.Dock="Top" Height="25" LastChildFill="True" Margin="0,0,0,5">
                        <Label x:Name="labelB" Content="B" DockPanel.Dock="Left" Foreground="{Binding Foreground, ElementName=txtRvalue, Mode=TwoWay}" FontSize="16" FontFamily="Cambria Math" HorizontalContentAlignment="Center" Padding="2" ScrollViewer.VerticalScrollBarVisibility="Disabled" VerticalContentAlignment="Center" Width="25"/>
                        <TextBox x:Name="txtBvalue" BorderBrush="{x:Null}" Background="{Binding Background, ElementName=txtRvalue}" DockPanel.Dock="Right" Foreground="{Binding Foreground, ElementName=txtRvalue}" FontSize="16" FontFamily="Cambria Math" HorizontalContentAlignment="Center" Height="25" Margin="0" Padding="0,1,0,0" TextWrapping="Wrap" Text="0" VerticalAlignment="Center" VerticalContentAlignment="Bottom" Width="38"/>
                        <Slider x:Name="sliderBlue" BorderBrush="{x:Null}" Foreground="Black" Focusable="False" IsMoveToPointEnabled="True" LargeChange="15" Maximum="255" Margin="0,0,5,0" SmallChange="1" Value="0" VerticalAlignment="Center">
                            <Slider.Background>
                                <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
                                    <GradientStop Color="Black" Offset="0"/>
                                    <GradientStop Color="Blue" Offset="1"/>
                                </LinearGradientBrush>
                            </Slider.Background>
                            <Slider.Style>
                                <Style TargetType="{x:Type Slider}">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type Slider}">
                                                <Grid x:Name="GridRoot">
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition Height="Auto"/>
                                                        <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}"/>
                                                        <RowDefinition Height="Auto"/>
                                                    </Grid.RowDefinitions>
                                                    <TickBar x:Name="TopTick" Grid.ColumnSpan="3" Fill="{DynamicResource GlyphBrush}" Height="4" Margin="0,0,0,10" Placement="Top" Grid.RowSpan="2" SnapsToDevicePixels="True" Visibility="Collapsed"/>
                                                    <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="3" CornerRadius="2" Height="4" Margin="0,5" Grid.Row="1"/>
                                                    <Track x:Name="PART_Track" Margin="-1,0" Grid.Row="1">
                                                        <Track.DecreaseRepeatButton>
                                                            <RepeatButton Command="Slider.DecreaseLarge">
                                                                <RepeatButton.Style>
                                                                    <Style TargetType="{x:Type RepeatButton}">
                                                                        <Setter Property="Background" Value="Transparent"/>
                                                                        <Setter Property="BorderBrush" Value="Transparent"/>
                                                                        <Setter Property="IsTabStop" Value="False"/>
                                                                        <Setter Property="Focusable" Value="False"/>
                                                                        <Setter Property="Template">
                                                                            <Setter.Value>
                                                                                <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                                    <Grid>
                                                                                        <Rectangle Fill="{TemplateBinding Background}" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="{TemplateBinding BorderThickness}"/>
                                                                                    </Grid>
                                                                                </ControlTemplate>
                                                                            </Setter.Value>
                                                                        </Setter>
                                                                    </Style>
                                                                </RepeatButton.Style>
                                                            </RepeatButton>
                                                        </Track.DecreaseRepeatButton>
                                                        <Track.IncreaseRepeatButton>
                                                            <RepeatButton Command="Slider.IncreaseLarge">
                                                                <RepeatButton.Style>
                                                                    <Style TargetType="{x:Type RepeatButton}">
                                                                        <Setter Property="Background" Value="Transparent"/>
                                                                        <Setter Property="BorderBrush" Value="Transparent"/>
                                                                        <Setter Property="IsTabStop" Value="False"/>
                                                                        <Setter Property="Focusable" Value="False"/>
                                                                        <Setter Property="Template">
                                                                            <Setter.Value>
                                                                                <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                                    <Grid>
                                                                                        <Rectangle Fill="{TemplateBinding Background}" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="{TemplateBinding BorderThickness}"/>
                                                                                    </Grid>
                                                                                </ControlTemplate>
                                                                            </Setter.Value>
                                                                        </Setter>
                                                                    </Style>
                                                                </RepeatButton.Style>
                                                            </RepeatButton>
                                                        </Track.IncreaseRepeatButton>
                                                        <Track.Thumb>
                                                            <Thumb x:Name="TrackThumb" Foreground="{TemplateBinding Foreground}" Style="{DynamicResource ColorSliderThumb}"/>
                                                        </Track.Thumb>
                                                    </Track>
                                                    <TickBar x:Name="BottomTick" Grid.ColumnSpan="3" Fill="{TemplateBinding Foreground}" Height="4" Margin="0,0,0,-4" Placement="Bottom" Grid.Row="2" SnapsToDevicePixels="True" Visibility="Collapsed"/>
                                                </Grid>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="TickPlacement" Value="TopLeft">
                                                        <Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>
                                                    </Trigger>
                                                    <Trigger Property="TickPlacement" Value="BottomRight">
                                                        <Setter Property="Visibility" TargetName="BottomTick" Value="Visible"/>
                                                    </Trigger>
                                                    <Trigger Property="TickPlacement" Value="Both">
                                                        <Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>
                                                        <Setter Property="Visibility" TargetName="BottomTick" Value="Visible"/>
                                                    </Trigger>
                                                    <Trigger Property="IsEnabled" Value="False">
                                                        <Setter Property="Background" TargetName="Border" Value="{DynamicResource DisabledBackgroundBrush}"/>
                                                        <Setter Property="BorderBrush" TargetName="Border" Value="{DynamicResource DisabledBorderBrush}"/>
                                                    </Trigger>
                                                    <Trigger Property="Orientation" Value="Vertical">
                                                        <Setter Property="LayoutTransform" TargetName="GridRoot">
                                                            <Setter.Value>
                                                                <RotateTransform Angle="-90"/>
                                                            </Setter.Value>
                                                        </Setter>
                                                        <Setter Property="Orientation" TargetName="PART_Track" Value="Horizontal"/>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </Slider.Style>
                        </Slider>
                    </DockPanel>
                    <DockPanel x:Name="dockAlpha" DockPanel.Dock="Top" Height="25" LastChildFill="True" Margin="0,0,0,5">
                        <Label x:Name="labelA" Content="A" DockPanel.Dock="Left" Foreground="{Binding Foreground, ElementName=txtRvalue}" FontSize="16" FontFamily="Cambria Math" HorizontalContentAlignment="Center" Padding="2" ScrollViewer.VerticalScrollBarVisibility="Disabled" VerticalContentAlignment="Center" Width="25"/>
                        <TextBox x:Name="txtAvalue" BorderBrush="{x:Null}" Background="{Binding Background, ElementName=txtRvalue}" DockPanel.Dock="Right" Foreground="{Binding Foreground, ElementName=txtRvalue}" FontSize="16" FontFamily="Cambria Math" HorizontalContentAlignment="Center" Height="25" Margin="0" Padding="0,1,0,0" TextWrapping="Wrap" Text="255" VerticalAlignment="Center" VerticalContentAlignment="Bottom" Width="38"/>
                        <Slider x:Name="sliderAlpha" BorderBrush="{x:Null}" Foreground="#FF979797" Focusable="False" IsMoveToPointEnabled="True" LargeChange="15" Maximum="255" Margin="0,0,5,0" Style="{DynamicResource SliderAlphaComponent}" SmallChange="1" Value="255" VerticalAlignment="Center">
                            <Slider.Background>
                                <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
                                    <GradientStop Color="#00000000" Offset="0"/>
                                    <GradientStop Color="Black" Offset="1"/>
                                </LinearGradientBrush>
                            </Slider.Background>
                        </Slider>
                    </DockPanel>
                    <DockPanel x:Name="dockSelectedColor" DockPanel.Dock="Bottom" VerticalAlignment="Bottom">
                        <TextBox x:Name="txtColorCode" BorderBrush="{x:Null}" Background="{Binding Background, ElementName=txtRvalue, Mode=TwoWay}" DockPanel.Dock="Right" Foreground="{Binding Foreground, ElementName=txtRvalue}" FontSize="14" FontFamily="Lucida Console" HorizontalContentAlignment="Center" Height="27" Padding="0" TextWrapping="Wrap" Text="#FF000000" VerticalAlignment="Bottom" VerticalContentAlignment="Center" Width="95"/>
                        <Grid DockPanel.Dock="Right" Height="25" Margin="10,0,2,0" VerticalAlignment="Center">
                            <Grid.Background>
                                <DrawingBrush Stretch="Fill" TileMode="Tile" Viewport="12,12,20,20" ViewportUnits="Absolute">
                                    <DrawingBrush.Drawing>
                                        <DrawingGroup>
                                            <GeometryDrawing Brush="White">
                                                <GeometryDrawing.Geometry>
                                                    <RectangleGeometry Rect="0,0,20,20"/>
                                                </GeometryDrawing.Geometry>
                                            </GeometryDrawing>
                                            <GeometryDrawing Brush="LightGray">
                                                <GeometryDrawing.Geometry>
                                                    <GeometryGroup>
                                                        <RectangleGeometry Rect="0,0,10,10"/>
                                                        <RectangleGeometry Rect="10,10,10,10"/>
                                                    </GeometryGroup>
                                                </GeometryDrawing.Geometry>
                                            </GeometryDrawing>
                                        </DrawingGroup>
                                    </DrawingBrush.Drawing>
                                </DrawingBrush>
                            </Grid.Background>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Border x:Name="rectSelectedColor" BorderBrush="Black" BorderThickness="0,1,1,1" Background="Black" Grid.Column="1" Margin="0,-1,-1,-1" ToolTip="Current color"/>
                            <Border x:Name="rectInitialColor" BorderBrush="Black" BorderThickness="1,1,0,1" Background="Black" Margin="-1" ToolTip="Initial Color"/>
                        </Grid>
                    </DockPanel>
                </DockPanel>
            </Grid>
        </Border>
    </ControlTemplate>
    
</ResourceDictionary>